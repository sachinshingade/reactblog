[{"E:\\Sachin\\reactblog\\src\\index.js":"1","E:\\Sachin\\reactblog\\src\\App.js":"2","E:\\Sachin\\reactblog\\src\\reportWebVitals.js":"3","E:\\Sachin\\reactblog\\src\\Components\\Header\\Header.js":"4","E:\\Sachin\\reactblog\\src\\Components\\PostList\\PostList.js":"5","E:\\Sachin\\reactblog\\src\\Components\\PostDetail\\PostDetail.js":"6","E:\\Sachin\\reactblog\\src\\Components\\Comment\\Comment.js":"7"},{"size":557,"mtime":1607870419160,"results":"8","hashOfConfig":"9"},{"size":1116,"mtime":1607799204673,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":4007,"mtime":1607873136888,"results":"12","hashOfConfig":"9"},{"size":2005,"mtime":1607801352790,"results":"13","hashOfConfig":"9"},{"size":1165,"mtime":1607801783078,"results":"14","hashOfConfig":"9"},{"size":5727,"mtime":1607871201429,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j844ke",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},"E:\\Sachin\\reactblog\\src\\index.js",[],"E:\\Sachin\\reactblog\\src\\App.js",["35","36"],"import logo from './logo.svg';\nimport './App.scss';\nimport React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\n\nimport Header from './Components/Header/Header';\nimport PostList from './Components/PostList/PostList';\nimport PostDetail from './Components/PostDetail/PostDetail';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <React.Fragment>\n          <Header/>\n          <Switch>\n              <Route exact path={'/'} render={() => {\n                  return <Redirect to={'/post'}/>\n              }}/>\n              <Route exact path={'/post'} component={PostList}/>\n              <Route exact path={'/post-detail/:id'} component={PostDetail}/>\n              {/* <Route exact path={'/products'} component={UserDashboard}/>\n              <Route exact path={'/dashboard'} component={AdminDashboard}/>\n              <Route exact path={'/cart'} component={Cart}/>\n              <Route exact path={'/users'} component={UserList}/> */}\n          </Switch>\n          {/* <Footer/> */}\n      </React.Fragment>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n",["37","38"],"E:\\Sachin\\reactblog\\src\\reportWebVitals.js",[],"E:\\Sachin\\reactblog\\src\\Components\\Header\\Header.js",["39"],"E:\\Sachin\\reactblog\\src\\Components\\PostList\\PostList.js",["40"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport './PostList.scss';\r\n\r\nfunction PostList() {\r\n    const [postList, setPostList] = useState(\"\");\r\n    useEffect(()=>getPostData(),[]);\r\n    const history = useHistory();\r\n    function getPostData() {\r\n        fetch(`http://localhost:3000/posts`)\r\n            .then(res=>res.json())\r\n            .then(json => {\r\n                console.log(\"json\", json)\r\n                let data = json;\r\n                data.map((post) => {\r\n                    console.log('post', post)\r\n                    post['slicedBody'] = post.description.slice(0, 120) + \"...\";\r\n                });\r\n                setPostList(data)\r\n            })\r\n    }\r\n    function routeTo (id) {\r\n        console.log(\"route\", id)\r\n        let url = `/post-detail/${id}`\r\n        history.push(url)\r\n    }\r\n    return(\r\n        <div className=\"postlist\">\r\n            <div className=\"postsBlock\">\r\n                {\r\n                    postList && postList.map(post => {\r\n                        return(\r\n                            <div className=\"postCards\" key={post._id}>\r\n                                <div className=\"postBody\">\r\n                                    <h3 className=\"postTitle\">{post.title}</h3>\r\n                                    <p className=\"postBodyPara\">{post.slicedBody}</p>\r\n                                    {/* <div className=\"authorName\">\r\n                                        <p className=\"authName\">{post.authorname}</p>\r\n                                    </div> */}\r\n                                </div>\r\n                                <div className=\"btn-block\">\r\n                                        <button onClick={() => routeTo(post._id)}>Read More</button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList;","E:\\Sachin\\reactblog\\src\\Components\\PostDetail\\PostDetail.js",["41"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport './PostDetail.scss';\r\nimport Comment from '../Comment/Comment'\r\n\r\nfunction PostDetail() {\r\n    const [postsData, setPost] = useState(\"\");\r\n    let { id } = useParams();\r\n    useEffect(()=>getPostData(id),[]);\r\n    function getPostData(id) {\r\n        fetch(`http://localhost:3000/post/${id}`)\r\n            .then(res=>res.json())\r\n            .then(json => {\r\n                console.log('json', json)\r\n                setPost(json)\r\n            })\r\n    }\r\n    return(\r\n        <>\r\n            {\r\n                postsData ? (\r\n                    <div className=\"postDetailBlock\">\r\n                        <div className=\"postContent\">\r\n                            <h2 className=\"postTitle\">{ postsData?.title }</h2>\r\n                            <p className=\"postBody\">{ postsData?.description}</p>\r\n                         </div>\r\n                        <Comment postId = {postsData._id} comments ={postsData?.comments}/>\r\n                    </div>\r\n                ) : null\r\n            }\r\n        </>\r\n            \r\n    )\r\n}\r\nexport default PostDetail;","E:\\Sachin\\reactblog\\src\\Components\\Comment\\Comment.js",["42","43"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { FaReply } from \"react-icons/fa\";\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport './Comment.scss';\r\n\r\nfunction Comment(props) {\r\n    console.log(\"props\",props)\r\n    const [comments, setComments] = useState(\"\");\r\n    const [comment, setComment] = useState('');\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [toastBody, setToastBody] = useState('');\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [replyCommentId, setReplyCommentId] = useState('');\r\n    useEffect(() => setComments(props.comments),[]);\r\n    const openToast = (json) => {\r\n        setShowToast(true);\r\n        setToastBody(json);\r\n    };\r\n    const handleCloseModal = () => setShowModal(false);\r\n    const handleShowModal = () => setShowModal(true);\r\n    function submitComment(){\r\n        let id = props.postId;\r\n        console.log('id', id)\r\n        if(comment){\r\n            fetch('http://localhost:3000/addcomment', {\r\n                method: 'post',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({comment, id})\r\n            }).then(res=> res.json())\r\n            .then(json => {\r\n                console.log('json', json)\r\n                openToast(json.msg);\r\n                comments.push({comment})\r\n                console.log('comments', comments)\r\n                setComment('')\r\n            })\r\n        }\r\n        \r\n    }\r\n    function updateInputValue(evt){\r\n        setComment(evt.target.value)\r\n    }\r\n    function addReply(commentid) {\r\n        console.log('commentId', commentid);\r\n        setReplyCommentId(commentid)\r\n        handleShowModal()\r\n    }\r\n    function OnSubmit() {\r\n        let postid = props.postId;\r\n        let commentId = replyCommentId;\r\n        let reply = comment;\r\n        console.log(\"ps\", postid);\r\n        console.log('cid', commentId);\r\n        console.log('reply',  reply)\r\n        fetch('http://localhost:3000/addreply', {\r\n                method: 'post',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({postid, commentId, reply})\r\n            }).then(res=> res.json())\r\n            .then(json => {\r\n                console.log('json', json)\r\n                openToast(json.msg);\r\n                // comments.push({comment})\r\n                // console.log('comments', comments)\r\n                setComment('');\r\n                handleCloseModal();\r\n            })\r\n        \r\n    }\r\n    return (\r\n        <>\r\n        <div>\r\n        <div className=\"commentTrail\">\r\n            <h4>Comments</h4>\r\n            { \r\n                comments && comments.map(comment => {\r\n                    return(\r\n                        <div className=\"oneBlock\">\r\n                        <div className=\"commentBlock\" key={comment._id}>\r\n                            <div className=\"commentAuthor\">\r\n                                <div className=\"comment\">\r\n                                    <p className=\"commentText\">{comment.comment}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"replyBtn\">\r\n                                <FaReply onClick={()=>addReply(comment._id)}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"replies\">\r\n                            {\r\n                                comment.replies && comment.replies.map(reply => {\r\n                                    return(\r\n                                        <div className=\"reply\" key={reply._id}>\r\n                                            {reply.reply}\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </div>\r\n        <div className=\"addCommentBlock\">\r\n            <h4>Add Comment</h4>\r\n            <div className=\"block\">\r\n                <div className=\"textInput\">\r\n                    <input type=\"text\" value={comment} onChange={(e)=>updateInputValue(e)}/>\r\n                </div>\r\n                <div className=\"btn-block\">\r\n                    <button className=\"addBtn\" onClick={submitComment}>Submit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <Toast \r\n        style={{\r\n            position: 'fixed',\r\n            right: 0,\r\n            bottom: '50px',\r\n            left: 0,\r\n            margin: 'auto',\r\n            width: 'fit-content',\r\n            height: 'fit-content'\r\n        }} \r\n        onClose={() => setShowToast(false)} \r\n        show={showToast} \r\n        delay={3000} \r\n        autohide\r\n        >\r\n            <Toast.Body>{toastBody}</Toast.Body>\r\n        </Toast>\r\n        <Modal show={showModal} onHide={handleCloseModal}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Post a Reply on Comment</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <input style={{width: '100%'}} type=\"text\" value={comment} onChange={(e)=>updateInputValue(e)}/>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <button variant=\"secondary\" onClick={handleCloseModal}>\r\n                Close\r\n            </button>\r\n            <button variant=\"primary\" onClick={OnSubmit}>\r\n                Save Changes\r\n            </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default Comment;",{"ruleId":"44","severity":1,"message":"45","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":3,"column":17,"nodeType":"46","messageId":"47","endLine":3,"endColumn":26},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"44","severity":1,"message":"53","line":3,"column":27,"nodeType":"46","messageId":"47","endLine":3,"endColumn":36},{"ruleId":"54","severity":1,"message":"55","line":16,"column":33,"nodeType":"56","messageId":"57","endLine":16,"endColumn":35},{"ruleId":"58","severity":1,"message":"59","line":9,"column":35,"nodeType":"60","endLine":9,"endColumn":37,"suggestions":"61"},{"ruleId":"44","severity":1,"message":"62","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":19},{"ruleId":"58","severity":1,"message":"63","line":17,"column":49,"nodeType":"60","endLine":17,"endColumn":51,"suggestions":"64"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["67"],"'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'props.comments'. Either include it or remove the dependency array. If 'setComments' needs the current value of 'props.comments', you can also switch to useReducer instead of useState and read 'props.comments' in the reducer.",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [id]",{"range":"73","text":"74"},"Update the dependencies array to be: [props.comments]",{"range":"75","text":"76"},[311,313],"[id]",[694,696],"[props.comments]"]